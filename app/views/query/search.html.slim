.well
  = form_tag search_path(anchor: :results), id: 'seq-search-form' do
    / should add javascript valiation to make sure that user has input
    fieldset
      legend
        | Enter one amino acid sequences in 
        | #{link_to 'FASTA Format', 'http://en.wikipedia.org/wiki/Fasta_format', target: '_blank'}
      = text_area_tag :sequence, params[:sequence], class: 'seq-search-sequence'
      br
      = button_tag 'Load Example', type: 'button', class: 'load-example'

    fieldset
      legend Search Parameters
      .row
        .col-md-4.col-sm-4
          .form-group
            = label_tag :Database, 'Choose Database'
            = select_tag :Database, options_for_select(@available_database.collect{ |u| [u] })
        .col-md-4.col-sm-4
          .form-group
            = label_tag :Organism, 'Choose Organism'
            .br
            = select_tag :Organism, options_for_select(@available_organism.collect{ |u| [u] })
        .col-md-4.col-sm-4
          .checkbox
            = label_tag :result_window, class: 'checkbox' do
              = check_box_tag :result_window, 1, params[:result_window]
              |  Show results in a new window
          .checkbox
            = label_tag :result_send, class: 'checkbox' do
              = check_box_tag :result_send, 1, params[:result_send], class: 'result-send-email'
              |  Send results to your email
            .form-group
              = text_field_tag :send_email, params[:send_email], class: 'send-email-box', hidden: 'true', placeholder: "Your Email"

      legend BLAST Parameters
      .row
        .col-md-4.col-sm-4
          .form-group
            = label_tag :gap_cost, 'Cost to open a gap'
            = text_field_tag :gap_cost, params[:gap_cost], class: 'form-control'
          .form-group
            = label_tag :extend_cost, 'Cost to extend a gap'
            = text_field_tag :extend_cost, params[:extend_cost], class: 'form-control'
        .col-md-4.col-sm-4
          .form-group
            = label_tag :mismatch_penalty, 'Penalty for mismatch'
            = text_field_tag :mismatch_penalty, params[:mismatch_penalty], class: 'form-control'
          .form-group
            = label_tag :match_reward, 'Reward for match'
            = text_field_tag :match_reward, params[:match_reward], class: 'form-control'
        .col-md-4.col-sm-4
          .form-group
            = label_tag :evalue, 'Expectation value'
            = text_field_tag :evalue, (params[:evalue]), class: 'form-control'
          .checkbox
            = label_tag :gapped_alignment, class: 'checkbox' do
              = check_box_tag :gapped_alignment, 1, params[:gapped_alignment] 
              | Perform gapped alignment
          .checkbox            
            = label_tag :lower_case_filtering, class: 'checkbox' do
              = check_box_tag :lower_case_filtering, 1, params[:lower_case_filtering]
              | Lower case filtering of FASTA sequence
          .checkbox
            = label_tag :filter_query_sequence, class: 'checkbox' do
              = check_box_tag :filter_query_sequence, 1, params[:filter_query_sequence]
              | Filter query sequence (DUST &amp; SEG)


    - if lookup_context.find_all('seq_search/_filters').any?
      fieldset
        = render 'seq_search/filters'
    .form-actions
      = submit_tag 'Search', class: 'btn btn-primary'
      = link_to 'Reset', root_path, class: 'btn'


/ = render "submit_sequence"  
/ need to think more robust way for error handling
- if @aa_similarity.present?
  hr
  = render partial: "result"
  = render partial: "seqresult"
  / if can't pass the same group, then do gene blast so nt_similarity will present; otherwise, nt_similiarity won't present, do phylogenies diagram
  - if @nt_similarity.present? and @is_match == false
    = render "submit_sequence"
  - else
    = render partial: "phylogenies"
    
- elsif params[:commit].present?
  .seq-search-no-results No Results
