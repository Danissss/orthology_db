div.container
  #seq-search-results
    - if @aa_sequence_result.present?
    
      - if @aa_sequence_result.length > 0
        - @aa_sequence_result.each do |sequence|
          .seq-search-hit
            .seq-search-scores
              | E value: #{sequence.evalue}
              br
              | Bit score: #{sequence.bit_score}
              br
              | Query length: #{sequence.query_seq.length}
              br
              | Identity: #{get_percentage_identity(sequence.identity, sequence.query_seq.length)} %
            .seq-search-title
              - if lookup_context.find_all('seq_search/_hit_link').any?
                = render '/seq_search/hit_link', sequence: sequence
              - else
                strong = link_to sequence.definition, protein_path(:id => find_id_by_header(sequence.definition)) , target: "_blank"
                br
                = form_with url:'protein', method: :get do |f|
                  = hidden_field_tag(:group, @sequence_group[sequence.definition])
                  | Group: 
                  - if @sequence_group[sequence.definition].present?
                    td = f.submit "#{@sequence_group[sequence.definition]}", disabled: false, formtarget: "_blank", :id => 'group-click-button'
                  - else
                    td No Group
                
            div
              .seq-search-sequence-labels
                br
                | Query:
                br
                br
                | Subject:
                br
              .seq-search-sequence-comparison
                - len = sequence.query_seq.length
                - query_seq = " " + sequence.query_seq
                - midline = " " + sequence.midline
                - subject = " " + sequence.target_seq
                - count = "1 "
                - offset = 1
                - for i in 2..len
                  - if i % 60 == 0
                    - count = count + " " + i.to_s
                    - query_seq.insert(i + offset, " " * i.to_s.size)
                    - midline.insert(i + offset, " " * i.to_s.size)
                    - subject.insert(i + offset, " " * i.to_s.size)
                    - offset = offset + i.to_s.size
                  - else
                    - count = count + " "
                - count = count + len.to_s
                - query_seq = query_seq + (" " * len.to_s.size)
                - midline = midline + (" "  * len.to_s.size)
                - subject = subject + (" "  * len.to_s.size)
                .seq-search-chain.seq-search-count= count
                .seq-search-chain.seq-search-query= query_seq
                .seq-search-chain.seq-search-midline= midline
                .seq-search-chain.seq-search-target= subject
        .data-container 
      - else
        p.alert.alert-danger No matches.

    - else
      p.alert.alert-danger No matches.

